Max = numeric(),
stringsAsFactors = FALSE)
for (var in vars) {
if (var %in% names(data)) {
var_data <- data[[var]]
var_data <- var_data[!is.na(var_data)]
if (length(var_data) > 0) {
stats_row <- data.frame(
Variable = var,
Mean = round(mean(var_data, na.rm = TRUE), 2),
Median = round(median(var_data, na.rm = TRUE), 2),
SD = round(sd(var_data, na.rm = TRUE), 2),
Min = round(min(var_data, na.rm = TRUE), 2),
Max = round(max(var_data, na.rm = TRUE), 2)
)
stats_df <- rbind(stats_df, stats_row)
} else {
cat(paste("Warning：Variable", var, "no valid data\n"))
}
} else {cat(paste("Warning：Variable", var, "not exist\n"))}}
return(stats_df)}
descriptive_stats <- calculate_descriptive_stats(combined_data_final_ver, variables_to_analyze)
print(descriptive_stats, row.names = FALSE)
output_filename <- "descriptive_statistics.csv"
write.csv(descriptive_stats, output_filename, row.names = FALSE)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(tidyr)
library(grid)
theme_set(theme_minimal())
# Updated data based on new results
data <- data.frame(
Outcome = c("income", "crime_rate", "house_price", "mobility",
"income", "crime_rate", "house_price", "mobility"),
Simple_DID = c(1447.579, 0, 9028.348, -0.007,
3922.664, -0.002, -27652.532, -0.103),
Standard_DID = c(1447.235, 0, 9008.942, -0.007,
3613.05, -0.002, -23572.147, -0.087),
No_COVID = c(1324.788, 0.001, 9182.995, -0.006,
3284.892, -0.002, -29037.775, -0.08),
SLM_Direct = c(1096.015, 0, 4645.546, 0,
3613.246, -0.003, -21181.813, -0.087),
SLM_Indirect = c(258.896, 0, 22994.778, 0,
-2801.905, -0.016, 63583.768, -0.032),
SEM_Coef = c(1203.583, 0, 9885.27, -0.006,
3652.298, -0.003, -22553.352, -0.084),
SDM_Local = c(1096.015, -0.001, 4645.546, -0.007,
3613.246, -0.003, -21181.813, -0.087),
KNN5_SLM = c(365.74, 0.017, 39432.044, 0.018,
3996.807, -0.002, -24150.776, 0),
KNN10_SLM = c(1286.024, 0.006, 7700.061, 0.008,
0, 0, 0, 0),
Synthetic = c(0, 0, 0, 0,
5629.869, -0.01, -27380.429, -0.022),
DR_DID = c(1977.929, -0.009, -2709.8, -0.007,
3825.675, -0.017, -13861.421, -0.071),
Bootstrap = c(1442.158, -0.001, 9122.088, -0.006,
3671.577, -0.003, -28618.53, -0.103),
Project = c(rep("NLE", 4), rep("BRE", 4))
)
# Pivot longer with updated column names
data_long <- data %>%
pivot_longer(cols = c(Simple_DID, Standard_DID, No_COVID,
SLM_Direct, SLM_Indirect, SEM_Coef, SDM_Local,
KNN5_SLM, KNN10_SLM, Synthetic, DR_DID, Bootstrap),
names_to = "Method",
values_to = "Value")
# Update factor levels and display names
data_long$Method <- factor(data_long$Method,
levels = c("Standard_DID", "Simple_DID", "No_COVID",
"DR_DID", "Bootstrap", "SLM_Direct",
"SLM_Indirect", "SEM_Coef", "SDM_Local",
"KNN5_SLM", "KNN10_SLM", "Synthetic"))
data_long$Method_Display <- gsub("_", " ", data_long$Method)
data_long$Method_Display <- gsub("DID", "DiD", data_long$Method_Display)
data_long$Method_Display <- gsub("SLM", "SLM", data_long$Method_Display)
data_long$Method_Display <- gsub("SEM", "SEM", data_long$Method_Display)
data_long$Method_Display <- gsub("SDM", "SDM", data_long$Method_Display)
data_long$Method_Display <- gsub("KNN", "KNN", data_long$Method_Display)
bre_color <- "#D73027"
nle_color <- "#4575B4"
create_chart <- function(outcome_name, y_label, y_limits = NULL) {
plot_data <- data_long %>%
filter(Outcome == outcome_name)
p <- ggplot(plot_data, aes(x = Method_Display, y = Value, fill = Project)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8),
width = 0.7, alpha = 0.8) +
scale_fill_manual(values = c("BRE" = bre_color, "NLE" = nle_color),
labels = c("BRE", "NLE")) +
labs(x = "Estimation Method",
y = y_label,
fill = "Project") +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "#E0E0E0", size = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9, color = "black"),
axis.text.y = element_text(size = 9, color = "black"),
axis.title = element_text(size = 10, color = "black"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10)),
legend.position = c(0.85, 0.95),
legend.direction = "horizontal",
legend.title = element_text(size = 9),
legend.text = element_text(size = 8),
legend.background = element_rect(fill = "white", color = "grey80"),
legend.key.size = unit(0.4, "cm"),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
if (!is.null(y_limits)) {
p <- p + coord_cartesian(ylim = y_limits)
}
p <- p + geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.3)
return(p)
}
p1 <- create_chart("income", "Income Effect (£)") +
ggtitle("A. Impact on Household Income") +
theme(plot.title = element_text(size = 11, hjust = 0.5, face = "bold"))
p2 <- create_chart("crime_rate", "Crime Rate Change") +
ggtitle("B. Impact on Crime Rate") +
theme(plot.title = element_text(size = 11, hjust = 0.5, face = "bold")) +
coord_cartesian(ylim = c(-0.025, 0.025))
p3 <- create_chart("house_price", "House Price Effect (£)") +
ggtitle("C. Impact on House Prices") +
theme(plot.title = element_text(size = 11, hjust = 0.5, face = "bold"))
p4 <- create_chart("mobility", "Mobility Change") +
ggtitle("D. Impact on Mobility") +
theme(plot.title = element_text(size = 11, hjust = 0.5, face = "bold")) +
coord_cartesian(ylim = c(-0.12, 0.04))
main_title <- textGrob(
"Transport Infrastructure Impact Analysis: Comprehensive Model Comparison",
gp = gpar(fontsize = 14, fontface = "bold", col = "black"))
sub_title <- textGrob(
"Northern Line Extension (NLE) vs Barking Riverside Extension (BRE)",
gp = gpar(fontsize = 12, fontface = "plain", col = "black"))
final_plot <- grid.arrange(
main_title,
sub_title,
arrangeGrob(p1, p2, p3, p4, ncol = 2, nrow = 2),
heights = c(0.06, 0.04, 0.9),
ncol = 1)
data_long_facet <- data_long %>%
mutate(Outcome_Label = case_when(
Outcome == "income" ~ "A. Impact on Household Income",
Outcome == "crime_rate" ~ "B. Impact on Crime Rate",
Outcome == "house_price" ~ "C. Impact on House Prices",
Outcome == "mobility" ~ "D. Impact on Mobility"),
Outcome_Label = factor(Outcome_Label,
levels = c("A. Impact on Household Income",
"B. Impact on Crime Rate",
"C. Impact on House Prices",
"D. Impact on Mobility")))
facet_plot <- ggplot(data_long_facet, aes(x = Method_Display, y = Value, fill = Project)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8),
width = 0.7, alpha = 0.8) +
facet_wrap(~ Outcome_Label, scales = "free_y", ncol = 2) +
scale_fill_manual(values = c("BRE" = bre_color, "NLE" = nle_color)) +
labs(title = "Transport Infrastructure Impact Analysis: Comprehensive Model Comparison",
subtitle = "Northern Line Extension (NLE) vs Barking Riverside Extension (BRE)",
x = "Estimation Method",
y = "Effect Size",
fill = "Project",
caption = "Note: Standard errors and significance levels available in detailed tables. SLM = Spatial Lag Model, SEM = Spatial Error Model, SDM = Spatial Durbin Model, DiD = Difference-in-Differences") +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = NA),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color = "#E0E0E0", size = 0.5),
strip.text = element_text(size = 10, face = "bold", hjust = 0),
strip.background = element_rect(fill = "#F5F5F5", color = "grey80"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
axis.title = element_text(size = 10),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 9, hjust = 0),
legend.position = "bottom",
legend.title = element_text(size = 10),
legend.text = element_text(size = 9)) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 0.3)
ggsave("transport_impact_analysis_panels.png",
plot = final_plot,
width = 14,
height = 10,
units = "in",
dpi = 300,
bg = "white")
ggsave("transport_impact_analysis_facet.png",
plot = facet_plot,
width = 12,
height = 10,
units = "in",
dpi = 300,
bg = "white")
ggsave("transport_impact_analysis_panels.pdf",
plot = final_plot,
width = 14,
height = 10,
units = "in",
dpi = 300)
ggsave("transport_impact_analysis_facet.pdf",
plot = facet_plot,
width = 12,
height = 10,
units = "in",
dpi = 300)
summary_stats <- data_long %>%
group_by(Outcome, Project) %>%
summarise(Mean = round(mean(Value, na.rm = TRUE), 2),
Median = round(median(Value, na.rm = TRUE), 2),
SD = round(sd(Value, na.rm = TRUE), 2),
Min = round(min(Value, na.rm = TRUE), 2),
Max = round(max(Value, na.rm = TRUE), 2),
N_Methods = n(),
.groups = 'drop') %>%
arrange(Outcome, Project)
print(summary_stats)
key_findings <- data_long %>%
filter(Method == "Standard_DID") %>%
select(Outcome, Project, Value) %>%
pivot_wider(names_from = Project, values_from = Value) %>%
mutate(
Difference = BRE - NLE,
Ratio = round(BRE / NLE, 2))
print(key_findings)
prepare_did_data_v2 <- function() {
all_lsoa <- all_lsoa
nle_lsoas <- nle_affected_new$LSOA11CD  # 35 LSOAs
bre_lsoas <- bre_affected_new$LSOA11CD  # 4 LSOAs
NLE_INTERVENTION_YEAR <- 2015
BRE_INTERVENTION_YEAR <- 2016
cat("Treatment Groups:\n")
cat("- NLE (intervention: 2015):", length(nle_lsoas), "LSOAs\n")
cat("- BRE (intervention: 2016):", length(bre_lsoas), "LSOAs\n\n")
if (!"dist_to_nle_station" %in% names(all_lsoa)) {
library(sf)
lsoa_sf <- all_lsoa %>%
st_transform(27700)
nle_sf <- nine_elms_station %>%
st_transform(27700)
bre_sf <- bre_station %>%
st_transform(27700)
dist_matrix_nle <- st_distance(lsoa_sf, nle_sf)
all_lsoa$dist_to_nle_station <- as.numeric(apply(dist_matrix_nle, 1, min))
dist_matrix_bre <- st_distance(lsoa_sf, bre_sf)
all_lsoa$dist_to_bre_station <- as.numeric(apply(dist_matrix_bre, 1, min))}
cat("Data Validation:\n")
cat("- Total LSOAs:", nrow(all_lsoa), "\n")
cat("- House price 2014 available:", sum(!is.na(all_lsoa$median_price_2014)), "\n")
cat("- House price 2015 available:", sum(!is.na(all_lsoa$median_price_2015)), "\n")
return(list(
all_lsoa = all_lsoa,
nle_lsoas = nle_lsoas,
bre_lsoas = bre_lsoas,
nle_year = NLE_INTERVENTION_YEAR,
bre_year = BRE_INTERVENTION_YEAR))}
select_controls_complete <- function(all_lsoa, treatment_lsoas,
project_type, dist_to_station) {
if(project_type == "NLE") {
INTERVENTION_YEAR <- 2015
BASELINE_YEAR <- 2014
baseline_data <- all_lsoa %>%
mutate(treatment = ifelse(LSOA11CD %in% treatment_lsoas, 1, 0),
dist = dist_to_station,
intervention_year = INTERVENTION_YEAR,
ptal_baseline = PTAL_Value_2014,
imd_baseline = imd2010,
pop_baseline = population_2014,
price_baseline = median_price_2014,
ptal_trend_short = (PTAL_Value_2014 - PTAL_Value_2012)/2,
pop_trend_short = (population_2014 - population_2012)/2,
ptal_trend_long = (PTAL_Value_2014 - PTAL_Value_2007)/7,
imd_trend_long = (imd2010 - imd2004)/6,
pop_trend_long = (population_2014 - population_2011)/3)
} else if(project_type == "BRE") {
INTERVENTION_YEAR <- 2016
BASELINE_YEAR <- 2015
cat("📅 Barking Riverside Extension\n")
cat("   Intervention: 2016, Baseline: 2015\n\n")
baseline_data <- all_lsoa %>%
mutate(treatment = ifelse(LSOA11CD %in% treatment_lsoas, 1, 0),
dist = dist_to_station,
intervention_year = INTERVENTION_YEAR,
ptal_baseline = PTAL_Value_2015,
imd_baseline = imd2015,
pop_baseline = population_2015,
price_baseline = median_price_2015,
ptal_trend_short = (PTAL_Value_2015 - PTAL_Value_2014)/1,
imd_trend_short = (imd2015 - imd2010)/5,
pop_trend_short = (population_2015 - population_2014)/1,
ptal_trend_long = (PTAL_Value_2015 - PTAL_Value_2007)/8,
imd_trend_long = (imd2015 - imd2004)/11,
pop_trend_long = (population_2015 - population_2011)/4)}
n_treated <- sum(baseline_data$treatment == 1)
treat_summary <- baseline_data %>%
filter(treatment == 1) %>%
summarise(n = n(),
mean_ptal = mean(ptal_baseline, na.rm = TRUE),
mean_imd = mean(imd_baseline, na.rm = TRUE),
mean_pop = mean(pop_baseline, na.rm = TRUE),
mean_price = mean(price_baseline, na.rm = TRUE),
mean_ptal_trend = mean(ptal_trend_long, na.rm = TRUE),
mean_imd_trend = mean(imd_trend_long, na.rm = TRUE),
mean_pop_trend = mean(pop_trend_long, na.rm = TRUE))
cat("📊 Treatment Group (n=", treat_summary$n, "):\n", sep="")
cat("\n   Baseline Values:\n")
cat("   - PTAL:", round(treat_summary$mean_ptal, 2), "\n")
cat("   - IMD:", round(treat_summary$mean_imd, 2), "\n")
cat("   - Population:", format(round(treat_summary$mean_pop, 0), big.mark=","), "\n")
cat("   - House Price: £", format(round(treat_summary$mean_price, 0), big.mark=","), "\n")
cat("\n   Pre-treatment Trends:\n")
cat("   - PTAL trend:", round(treat_summary$mean_ptal_trend, 3), "/year\n")
cat("   - IMD trend:", round(treat_summary$mean_imd_trend, 3), "/year\n")
cat("   - Pop trend:", round(treat_summary$mean_pop_trend, 0), "/year\n\n")
potential_controls <- baseline_data %>%
filter(treatment == 0,
dist >= 1500 & dist <= 8000,
!is.na(ptal_baseline),
!is.na(imd_baseline),
!is.na(pop_baseline),
!is.na(ptal_trend_long),
!is.na(imd_trend_long))
cat("🔍 Potential controls found:", nrow(potential_controls), "\n")
cat("\n📈 Checking data variation:\n")
for(var in c("ptal_baseline", "imd_baseline", "ptal_trend_long")) {
var_sd <- sd(potential_controls[[var]], na.rm = TRUE)
cat("   SD of", var, ":", round(var_sd, 3), "\n")}
if(n_treated <= 4) {
match_ratio <- 5
caliper_val <- 0.5
} else if(n_treated <= 10) {
match_ratio <- 3
caliper_val <- 0.3
} else {
match_ratio <- 2
caliper_val <- 0.25
}
cat("\n⚙️ Matching Configuration:\n")
cat("   Target ratio: 1:", match_ratio, "\n")
cat("   Caliper:", caliper_val, "SD\n\n")
matched_data <- NULL
matching_method <- NULL
tryCatch({
psm_full <- matchit(
treatment ~ ptal_baseline + imd_baseline + log(pop_baseline + 1) +
ptal_trend_long + imd_trend_long + pop_trend_long,
data = bind_rows(
baseline_data %>% filter(treatment == 1),
potential_controls),
method = "nearest",
distance = "logit",
ratio = match_ratio,
caliper = caliper_val,
replace = FALSE)
matched_data <- match.data(psm_full)
matching_method <- "Full PSM with trends"
cat("✓ Success!\n")
}, error = function(e) {
cat("✗ Failed:", substr(e$message, 1, 50), "...\n")})
if(is.null(matched_data)) {
cat("\nTry 2: Simplified PSM (baseline + key trends)...\n")
tryCatch({
psm_simple <- matchit(
treatment ~ ptal_baseline + imd_baseline + ptal_trend_long,
data = bind_rows(
baseline_data %>% filter(treatment == 1),
potential_controls),
method = "nearest",
distance = "logit",
ratio = match_ratio,
caliper = caliper_val * 1.5,
replace = TRUE)
matched_data <- match.data(psm_simple)
matching_method <- "Simplified PSM"
cat("✓ Success!\n")
}, error = function(e) {cat("✗ Failed:", substr(e$message, 1, 50), "...\n")})}
if(is.null(matched_data)) {
cat("\nTry 3: Mahalanobis distance with trends...\n")
tryCatch({match_vars <- c("ptal_baseline", "imd_baseline", "pop_baseline",
"ptal_trend_long", "imd_trend_long")
data_for_match <- bind_rows(
baseline_data %>% filter(treatment == 1),
potential_controls) %>%
select(all_of(c("treatment", match_vars, "LSOA11CD"))) %>%
na.omit()
maha_match <- matchit(
treatment ~ ptal_baseline + imd_baseline + pop_baseline +
ptal_trend_long + imd_trend_long,
data = data_for_match,
method = "nearest",
distance = "mahalanobis",
ratio = match_ratio,
replace = FALSE)
matched_data <- match.data(maha_match)
matched_data <- matched_data %>%
left_join(baseline_data %>%
select(-treatment),
by = "LSOA11CD")
matching_method <- "Mahalanobis with trends"
cat("✓ Success!\n")
}, error = function(e) {
cat("✗ Failed:", substr(e$message, 1, 50), "...\n")})}
if(is.null(matched_data)) {
cat("\nTry 4: Direct selection based on trend similarity...\n")
potential_controls <- potential_controls %>%
mutate(ptal_diff = abs(ptal_baseline - treat_summary$mean_ptal) /
sd(baseline_data$ptal_baseline, na.rm = TRUE),
imd_diff = abs(imd_baseline - treat_summary$mean_imd) /
sd(baseline_data$imd_baseline, na.rm = TRUE),
ptal_trend_diff = abs(ptal_trend_long - treat_summary$mean_ptal_trend) /
sd(baseline_data$ptal_trend_long, na.rm = TRUE),
imd_trend_diff = abs(imd_trend_long - treat_summary$mean_imd_trend) /
sd(baseline_data$imd_trend_long, na.rm = TRUE),
total_distance = 0.2 * ptal_diff +
0.2 * imd_diff +
0.3 * ptal_trend_diff +
0.3 * imd_trend_diff) %>%
arrange(total_distance)
n_controls <- min(n_treated * match_ratio, nrow(potential_controls))
selected_controls <- potential_controls %>%
slice_head(n = n_controls)
matched_data <- bind_rows(
baseline_data %>% filter(treatment == 1),
selected_controls)
matching_method <- "Direct trend-based selection"
cat("✓ Selected", n_controls, "most similar controls\n")}
if(!is.null(matched_data)) {
cat("\n========================================\n")
cat("MATCHING RESULTS -", matching_method, "\n")
cat("========================================\n\n")
cat("📊 Sample Size:\n")
cat("   Treatment:", sum(matched_data$treatment == 1), "\n")
cat("   Control:", sum(matched_data$treatment == 0), "\n")
cat("   Ratio: 1:",
round(sum(matched_data$treatment == 0)/sum(matched_data$treatment == 1), 1), "\n\n")
vars_to_check <- list(
"Baseline" = c("ptal_baseline", "imd_baseline", "pop_baseline"),
"Trends" = c("ptal_trend_long", "imd_trend_long", "pop_trend_long"))
cat("📈 Balance Assessment (SMD):\n")
all_smds <- c()
for(category in names(vars_to_check)) {
cat("\n   ", category, ":\n", sep="")
for(var in vars_to_check[[category]]) {
if(var %in% names(matched_data) &&
sum(!is.na(matched_data[[var]])) > 0) {
treat_mean <- mean(matched_data[[var]][matched_data$treatment==1], na.rm=TRUE)
control_mean <- mean(matched_data[[var]][matched_data$treatment==0], na.rm=TRUE)
pooled_sd <- sd(matched_data[[var]], na.rm=TRUE)
if(pooled_sd > 0) {
smd <- abs(treat_mean - control_mean) / pooled_sd
} else {smd <- 0}
all_smds <- c(all_smds, smd)
var_name <- gsub("_baseline|_trend_long", "", var)
status <- ifelse(smd < 0.1, "✅",
ifelse(smd < 0.25, "⚠️", "❌"))
cat(sprintf("   - %-10s: %.3f %s\n", var_name, smd, status))}}}
mean_smd <- mean(all_smds, na.rm = TRUE)
cat("\n📊 Overall Balance:\n")
cat("   Mean SMD:", sprintf("%.3f", mean_smd), "\n")
if(mean_smd < 0.15) {
cat("   Grade: Good ✅\n")
cat("   ➜ Proceed with DID analysis\n")
} else if(mean_smd < 0.25) {
cat("   Grade: Acceptable ⚠️\n")
cat("   ➜ Use with covariate adjustment\n")
} else {cat("   Grade: Poor ❌\n")
cat("   ➜ Consider alternative methods\n")}
cat("\n🔍 Pre-treatment Parallel Trends Check:\n")
trend_check <- matched_data %>%
group_by(treatment) %>%
summarise(
ptal_trend = mean(ptal_trend_long, na.rm = TRUE),
imd_trend = mean(imd_trend_long, na.rm = TRUE),
.groups = "drop")
ptal_trend_diff <- abs(diff(trend_check$ptal_trend))
imd_trend_diff <- abs(diff(trend_check$imd_trend))
cat("   PTAL trend difference:", round(ptal_trend_diff, 4),
ifelse(ptal_trend_diff < 0.5, "✅", "⚠️"), "\n")
cat("   IMD trend difference:", round(imd_trend_diff, 4),
ifelse(imd_trend_diff < 2, "✅", "⚠️"), "\n")
if(ptal_trend_diff < 0.5 && imd_trend_diff < 2) {
cat("   ➜ Good evidence for parallel trends\n")
} else {cat("   ➜ Trends may differ - verify with full test\n")
}} else {cat("\n❌ All matching strategies failed!\n")
cat("Recommendations:\n")
cat("1. Check data quality and missing values\n")
cat("2. Consider synthetic control method\n")
cat("3. Expand search radius or relax criteria\n")}
return(matched_data)}
data_v2 <- prepare_did_data_v2()
nle_matched_final <- select_controls_complete(
all_lsoa = data_v2$all_lsoa,
treatment_lsoas = data_v2$nle_lsoas,
project_type = "NLE",
dist_to_station = data_v2$all_lsoa$dist_to_nle_station)
bre_matched_final <- select_controls_complete(
all_lsoa = data_v2$all_lsoa,
treatment_lsoas = data_v2$bre_lsoas,
project_type = "BRE",
dist_to_station = data_v2$all_lsoa$dist_to_bre_station)
if(!dir.exists("output_final")) dir.create("output_final")
if(!is.null(nle_matched_final)) {
write_csv(nle_matched_final, "output_final/nle_matched_with_trends.csv")
cat("\n✅ NLE matching saved\n")
}
if(!is.null(bre_matched_final)) {
write_csv(bre_matched_final, "output_final/bre_matched_with_trends.csv")
cat("\n✅ BRE matching saved\n")}
View(bre_matched_metrics)
