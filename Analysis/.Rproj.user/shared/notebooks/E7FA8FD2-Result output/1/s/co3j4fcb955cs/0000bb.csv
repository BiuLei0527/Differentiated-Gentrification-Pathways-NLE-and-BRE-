"0","# ============================================="
"0","# 动态绅士化指数分析（修复版）"
"0","# ============================================="
"0","library(tidyverse)"
"0","library(sf)"
"0","library(ggspatial)"
"0","library(RColorBrewer)"
"0",""
"0","# 创建输出目录"
"0","if(!dir.exists(""gentrification_result"")) {"
"0","  dir.create(""gentrification_result"")"
"0","}"
"0",""
"0","# ============================================="
"0","# 动态绅士化指数计算函数（修复版）"
"0","# ============================================="
"0","calculate_dynamic_gentrification_index <- function(panel_data, treatment_year, project_name) {"
"0","  cat(paste0(""\n=== 动态绅士化指数 - "", project_name, "" ===\n""))"
"0","  cat(""公式: 动态指数 = 基于数据自然分布的加权合成\n"")"
"0","  cat(""指数范围: 根据实际数据分布确定，无人为约束\n"")"
"0","  "
"0","  panel_data_no_geo <- panel_data %>% st_drop_geometry()"
"0","  baseline_year <- treatment_year - 1"
"0","  "
"0","  # 数据诊断"
"0","  cat(""\n=== 数据诊断 ===\n"")"
"0","  cat(""数据年份范围:"", min(panel_data_no_geo$year), ""到"", max(panel_data_no_geo$year), ""\n"")"
"0","  cat(""基线年份:"", baseline_year, ""\n"")"
"0","  cat(""分析年份:"", max(panel_data_no_geo$year), ""\n"")"
"0","  cat(""总数据行数:"", nrow(panel_data_no_geo), ""\n"")"
"0","  cat(""唯一LSOA数量:"", length(unique(panel_data_no_geo$LSOA11CD)), ""\n"")"
"0","  "
"0","  # 检查关键年份数据"
"0","  baseline_lsoas <- panel_data_no_geo %>% filter(year == baseline_year) %>% pull(LSOA11CD)"
"0","  latest_lsoas <- panel_data_no_geo %>% filter(year == max(year)) %>% pull(LSOA11CD)"
"0","  common_lsoas <- intersect(baseline_lsoas, latest_lsoas)"
"0","  "
"0","  cat(""基线年LSOA数量:"", length(baseline_lsoas), ""\n"")"
"0","  cat(""最新年LSOA数量:"", length(latest_lsoas), ""\n"")"
"0","  cat(""两年都有数据的LSOA:"", length(common_lsoas), ""\n"")"
"0","  "
"0","  # 检查犯罪率数据质量"
"0","  cat(""\n=== 犯罪率数据检查 ===\n"")"
"0","  crime_check <- panel_data_no_geo %>%"
"0","    filter(year %in% c(baseline_year, max(year))) %>%"
"0","    group_by(year) %>%"
"0","    summarise("
"0","      crime_min = min(`crime rate`, na.rm = TRUE),"
"0","      crime_max = max(`crime rate`, na.rm = TRUE),"
"0","      crime_mean = round(mean(`crime rate`, na.rm = TRUE), 4),"
"0","      crime_zero_count = sum(`crime rate` == 0, na.rm = TRUE),"
"0","      total_count = n(),"
"0","      .groups = 'drop'"
"0","    )"
"0","  print(crime_check)"
"0","  "
"0","  # 计算变化数据"
"0","  latest_year <- max(panel_data_no_geo$year)"
"0","  "
"0","  # 获取基线年和最新年的数据"
"0","  baseline_data <- panel_data_no_geo %>%"
"0","    filter(year == baseline_year) %>%"
"0","    select(LSOA11CD, "
"0","           baseline_income = lsoa_income_estimate,"
"0","           baseline_price = median_price,"
"0","           baseline_mobility = mobility,"
"0","           baseline_crime = `crime rate`)"
"0","  "
"0","  latest_data <- panel_data_no_geo %>%"
"0","    filter(year == latest_year) %>%"
"0","    select(LSOA11CD,"
"0","           latest_income = lsoa_income_estimate,"
"0","           latest_price = median_price,"
"0","           latest_mobility = mobility,"
"0","           latest_crime = `crime rate`)"
"0","  "
"0","  # 合并数据"
"0","  change_data <- baseline_data %>%"
"0","    inner_join(latest_data, by = ""LSOA11CD"") %>%"
"0","    mutate("
"0","      # 收入变化率"
"0","      income_change_rate = ifelse(baseline_income > 0,"
"0","                                  (latest_income - baseline_income) / baseline_income, 0),"
"0","      "
"0","      # 房价变化率"
"0","      price_change_rate = ifelse(baseline_price > 0,"
"0","                                (latest_price - baseline_price) / baseline_price, 0),"
"0","      "
"0","      # 流动性变化（直接差值）"
"0","      mobility_change = latest_mobility - baseline_mobility,"
"0","      "
"0","      # 犯罪率改善"
"0","      crime_improvement_rate = case_when("
"0","        baseline_crime == 0 & latest_crime == 0 ~ 0,"
"0","        baseline_crime == 0 & latest_crime > 0 ~ -1,"
"0","        latest_crime == 0 & baseline_crime > 0 ~ 1,"
"0","        baseline_crime > 0 & latest_crime > 0 ~ (baseline_crime - latest_crime) / baseline_crime,"
"0","        TRUE ~ 0"
"0","      ),"
"0","      "
"0","      # 标记数据质量"
"0","      has_valid_income = !is.na(income_change_rate) & is.finite(income_change_rate),"
"0","      has_valid_price = !is.na(price_change_rate) & is.finite(price_change_rate),"
"0","      has_valid_mobility = !is.na(mobility_change) & is.finite(mobility_change),"
"0","      has_valid_crime = !is.na(crime_improvement_rate) & is.finite(crime_improvement_rate)"
"0","    )"
"0","  "
"0","  # 显示数据质量统计"
"0","  cat(""\n=== 数据质量统计 ===\n"")"
"0","  quality_stats <- change_data %>%"
"0","    summarise("
"0","      total_lsoas = n(),"
"0","      valid_income = sum(has_valid_income),"
"0","      valid_price = sum(has_valid_price),"
"0","      valid_mobility = sum(has_valid_mobility),"
"0","      valid_crime = sum(has_valid_crime),"
"0","      zero_baseline_crime = sum(baseline_crime == 0),"
"0","      complete_data = sum(has_valid_income & has_valid_price & has_valid_mobility & has_valid_crime)"
"0","    )"
"0","  print(quality_stats)"
"0","  "
"0","  # 处理无效值"
"0","  valid_data <- change_data %>%"
"0","    mutate("
"0","      income_change_rate = ifelse(is.finite(income_change_rate), income_change_rate, 0),"
"0","      price_change_rate = ifelse(is.finite(price_change_rate), price_change_rate, 0),"
"0","      mobility_change = ifelse(is.finite(mobility_change), mobility_change, 0),"
"0","      crime_improvement_rate = ifelse(is.finite(crime_improvement_rate), crime_improvement_rate, 0)"
"0","    )"
"0","  "
"0","  cat(""\n保留的LSOA数量:"", nrow(valid_data), ""\n"")"
"0","  "
"0","  if(nrow(valid_data) == 0) {"
"0","    cat(""❌ 错误: 没有数据\n"")"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  # 显示变化率分布"
"0","  cat(""\n=== 变化率分布 ===\n"")"
"0","  change_summary <- valid_data %>%"
"0","    summarise("
"0","      income_mean = round(mean(income_change_rate, na.rm = TRUE) * 100, 1),"
"0","      income_sd = round(sd(income_change_rate, na.rm = TRUE) * 100, 1),"
"0","      price_mean = round(mean(price_change_rate, na.rm = TRUE) * 100, 1),"
"0","      price_sd = round(sd(price_change_rate, na.rm = TRUE) * 100, 1),"
"0","      mobility_mean = round(mean(mobility_change, na.rm = TRUE), 3),"
"0","      mobility_sd = round(sd(mobility_change, na.rm = TRUE), 3),"
"0","      crime_mean = round(mean(crime_improvement_rate, na.rm = TRUE) * 100, 1),"
"0","      crime_sd = round(sd(crime_improvement_rate, na.rm = TRUE) * 100, 1)"
"0","    )"
"0","  print(change_summary)"
"0","  "
"0","  # 计算标准化分数"
"0","  valid_data <- valid_data %>%"
"0","    mutate("
"0","      # 方法1: 百分位数排名法 (0-100自然分布)"
"0","      income_percentile = percent_rank(income_change_rate) * 100,"
"0","      price_percentile = percent_rank(price_change_rate) * 100,"
"0","      mobility_percentile = percent_rank(mobility_change) * 100,"
"0","      crime_percentile = percent_rank(crime_improvement_rate) * 100,"
"0","      "
"0","      # 方法2: Min-Max标准化 (0-100线性映射)"
"0","      income_minmax = {"
"0","        range_val = max(income_change_rate, na.rm = TRUE) - min(income_change_rate, na.rm = TRUE)"
"0","        if(range_val > 0) {"
"0","          (income_change_rate - min(income_change_rate, na.rm = TRUE)) / range_val * 100"
"0","        } else {"
"0","          rep(50, length(income_change_rate))"
"0","        }"
"0","      },"
"0","      price_minmax = {"
"0","        range_val = max(price_change_rate, na.rm = TRUE) - min(price_change_rate, na.rm = TRUE)"
"0","        if(range_val > 0) {"
"0","          (price_change_rate - min(price_change_rate, na.rm = TRUE)) / range_val * 100"
"0","        } else {"
"0","          rep(50, length(price_change_rate))"
"0","        }"
"0","      },"
"0","      mobility_minmax = {"
"0","        range_val = max(mobility_change, na.rm = TRUE) - min(mobility_change, na.rm = TRUE)"
"0","        if(range_val > 0) {"
"0","          (mobility_change - min(mobility_change, na.rm = TRUE)) / range_val * 100"
"0","        } else {"
"0","          rep(50, length(mobility_change))"
"0","        }"
"0","      },"
"0","      crime_minmax = {"
"0","        range_val = max(crime_improvement_rate, na.rm = TRUE) - min(crime_improvement_rate, na.rm = TRUE)"
"0","        if(range_val > 0) {"
"0","          (crime_improvement_rate - min(crime_improvement_rate, na.rm = TRUE)) / range_val * 100"
"0","        } else {"
"0","          rep(50, length(crime_improvement_rate))"
"0","        }"
"0","      },"
"0","      "
"0","      # 方法3: Z-score标准化"
"0","      income_z = scale(income_change_rate)[,1],"
"0","      price_z = scale(price_change_rate)[,1],"
"0","      mobility_z = scale(mobility_change)[,1],"
"0","      crime_z = scale(crime_improvement_rate)[,1],"
"0","      "
"0","      # Z-score转换为0-100"
"0","      income_z_scaled = pnorm(income_z) * 100,"
"0","      price_z_scaled = pnorm(price_z) * 100,"
"0","      mobility_z_scaled = pnorm(mobility_z) * 100,"
"0","      crime_z_scaled = pnorm(crime_z) * 100,"
"0","      "
"0","      # 计算三种不同的综合指数"
"0","      index_percentile = (income_percentile * 0.30 + price_percentile * 0.30 +"
"0","                         mobility_percentile * 0.25 + crime_percentile * 0.15),"
"0","      "
"0","      index_minmax = (income_minmax * 0.30 + price_minmax * 0.30 +"
"0","                     mobility_minmax * 0.25 + crime_minmax * 0.15),"
"0","      "
"0","      index_zscore = (income_z_scaled * 0.30 + price_z_scaled * 0.30 +"
"0","                     mobility_z_scaled * 0.25 + crime_z_scaled * 0.15),"
"0","      "
"0","      # 默认使用百分位数法"
"0","      dynamic_index = index_percentile,"
"0","      "
"0","      # 项目信息"
"0","      project = project_name,"
"0","      method = ""Percentile_Ranking"","
"0","      baseline_year = baseline_year,"
"0","      analysis_year = latest_year"
"0","    )"
"0","  "
"0","  # 显示三种方法的结果比较"
"0","  cat(""\n=== 三种指数方法比较 ===\n"")"
"0","  method_comparison <- valid_data %>%"
"0","    summarise("
"0","      percentile_min = round(min(index_percentile, na.rm = TRUE), 1),"
"0","      percentile_max = round(max(index_percentile, na.rm = TRUE), 1),"
"0","      percentile_mean = round(mean(index_percentile, na.rm = TRUE), 1),"
"0","      percentile_sd = round(sd(index_percentile, na.rm = TRUE), 1),"
"0","      "
"0","      minmax_min = round(min(index_minmax, na.rm = TRUE), 1),"
"0","      minmax_max = round(max(index_minmax, na.rm = TRUE), 1),"
"0","      minmax_mean = round(mean(index_minmax, na.rm = TRUE), 1),"
"0","      minmax_sd = round(sd(index_minmax, na.rm = TRUE), 1),"
"0","      "
"0","      zscore_min = round(min(index_zscore, na.rm = TRUE), 1),"
"0","      zscore_max = round(max(index_zscore, na.rm = TRUE), 1),"
"0","      zscore_mean = round(mean(index_zscore, na.rm = TRUE), 1),"
"0","      zscore_sd = round(sd(index_zscore, na.rm = TRUE), 1)"
"0","    )"
"0","  "
"0","  cat(""百分位数法: 范围"", method_comparison$percentile_min, ""-"", method_comparison$percentile_max,"
"0","      ""| 均值"", method_comparison$percentile_mean, ""| 标准差"", method_comparison$percentile_sd, ""\n"")"
"0","  cat(""Min-Max法:   范围"", method_comparison$minmax_min, ""-"", method_comparison$minmax_max,"
"0","      ""| 均值"", method_comparison$minmax_mean, ""| 标准差"", method_comparison$minmax_sd, ""\n"")"
"0","  cat(""Z-score法:   范围"", method_comparison$zscore_min, ""-"", method_comparison$zscore_max,"
"0","      ""| 均值"", method_comparison$zscore_mean, ""| 标准差"", method_comparison$zscore_sd, ""\n"")"
"0","  "
"0","  # 选择最佳方法"
"0","  cat(""\n=== 方法选择建议 ===\n"")"
"0","  n_areas <- nrow(valid_data)"
"0","  "
"0","  if(n_areas <= 5) {"
"0","    valid_data$dynamic_index <- valid_data$index_minmax"
"0","    valid_data$method <- ""MinMax_Small_Sample"""
"0","    cat(""✓ 选择Min-Max法 (适合小样本"", n_areas, ""个区域)\n"")"
"0","  } else if(n_areas <= 20) {"
"0","    valid_data$dynamic_index <- valid_data$index_percentile"
"0","    valid_data$method <- ""Percentile_Medium_Sample"""
"0","    cat(""✓ 选择百分位数法 (适合中等样本"", n_areas, ""个区域)\n"")"
"0","  } else {"
"0","    valid_data$dynamic_index <- valid_data$index_zscore"
"0","    valid_data$method <- ""ZScore_Large_Sample"""
"0","    cat(""✓ 选择Z-score法 (适合大样本"", n_areas, ""个区域)\n"")"
"0","  }"
"0","  "
"0","  # 显示分类统计"
"0","  cat(""\n=== 绅士化程度分类 ===\n"")"
"0","  classification <- valid_data %>%"
"0","    mutate("
"0","      gent_level = case_when("
"0","        dynamic_index >= 80 ~ ""高度绅士化"","
"0","        dynamic_index >= 70 ~ ""中度绅士化"","
"0","        dynamic_index >= 60 ~ ""轻度绅士化"","
"0","        TRUE ~ ""相对稳定"""
"0","      )"
"0","    ) %>%"
"0","    count(gent_level, sort = TRUE)"
"0","  print(classification)"
"0","  "
"0","  # 显示详细案例（修复版）"
"0","  cat(""\n=== 详细案例（前5个LSOA）===\n"")"
"0","  sample_detailed <- valid_data %>%"
"0","    select(LSOA11CD,"
"0","           income_change_rate, price_change_rate, mobility_change, crime_improvement_rate,"
"0","           income_percentile, price_percentile, mobility_percentile, crime_percentile,"
"0","           dynamic_index) %>%"
"0","    slice_head(n = 5) %>%"
"0","    mutate(across(where(is.numeric), ~round(.x, 2)))"
"0","  print(sample_detailed)"
"0","  "
"0","  # 显示各指标的实际贡献"
"0","  cat(""\n=== 各指标实际贡献分析 ===\n"")"
"0","  contributions <- valid_data %>%"
"0","    mutate("
"0","      income_contrib = income_percentile * 0.30,"
"0","      price_contrib = price_percentile * 0.30,"
"0","      mobility_contrib = mobility_percentile * 0.25,"
"0","      crime_contrib = crime_percentile * 0.15"
"0","    ) %>%"
"0","    summarise("
"0","      avg_income_contrib = round(mean(income_contrib, na.rm = TRUE), 2),"
"0","      avg_price_contrib = round(mean(price_contrib, na.rm = TRUE), 2),"
"0","      avg_mobility_contrib = round(mean(mobility_contrib, na.rm = TRUE), 2),"
"0","      avg_crime_contrib = round(mean(crime_contrib, na.rm = TRUE), 2)"
"0","    )"
"0","  "
"0","  total_contrib <- sum(contributions)"
"0","  cat(""收入平均贡献:"", contributions$avg_income_contrib,"
"0","      "" ("", round(contributions$avg_income_contrib/total_contrib*100, 1), ""%)\n"")"
"0","  cat(""房价平均贡献:"", contributions$avg_price_contrib,"
"0","      "" ("", round(contributions$avg_price_contrib/total_contrib*100, 1), ""%)\n"")"
"0","  cat(""流动性平均贡献:"", contributions$avg_mobility_contrib,"
"0","      "" ("", round(contributions$avg_mobility_contrib/total_contrib*100, 1), ""%)\n"")"
"0","  cat(""犯罪率平均贡献:"", contributions$avg_crime_contrib,"
"0","      "" ("", round(contributions$avg_crime_contrib/total_contrib*100, 1), ""%)\n"")"
"0","  "
"0","  return(valid_data)"
"0","}"
"0",""
"0","# ============================================="
"0","# 地图可视化函数"
"0","# ============================================="
"0","create_gentrification_map <- function(panel_data, gentrification_data, project_name,"
"0","                                     station_location = NULL) {"
"0","  "
"0","  cat(paste0(""\n生成 "", project_name, "" 绅士化地图...\n""))"
"0","  "
"0","  # 获取几何数据"
"0","  spatial_geometry <- panel_data %>%"
"0","    filter(year == max(year)) %>%"
"0","    select(LSOA11CD, geometry) %>%"
"0","    distinct(LSOA11CD, .keep_all = TRUE)"
"0","  "
"0","  # 合并数据"
"0","  map_data <- gentrification_data %>%"
"0","    left_join(spatial_geometry, by = ""LSOA11CD"") %>%"
"0","    st_as_sf()"
"0","  "
"0","  # 创建分类"
"0","  map_data <- map_data %>%"
"0","    mutate("
"0","      gent_quartile = ntile(dynamic_index, 4),"
"0","      gent_category = case_when("
"0","        gent_quartile == 4 ~ ""High (Q4)"","
"0","        gent_quartile == 3 ~ ""Medium-High (Q3)"","
"0","        gent_quartile == 2 ~ ""Medium-Low (Q2)"","
"0","        TRUE ~ ""Low (Q1)"""
"0","      ),"
"0","      display_label = paste0(LSOA11CD, ""\n"", round(dynamic_index, 1))"
"0","    )"
"0","  "
"0","  # 设置站点位置"
"0","  if(is.null(station_location)) {"
"0","    station_location <- st_centroid(st_union(map_data))"
"0","  }"
"0","  "
"0","  # 创建地图"
"0","  p_map <- ggplot() +"
"0","    geom_sf(data = map_data,"
"0","            aes(fill = dynamic_index),"
"0","            color = ""white"", size = 0.4, alpha = 0.9) +"
"0","    "
"0","    # 站点"
"0","    geom_sf(data = station_location,"
"0","            color = ""black"", fill = ""yellow"","
"0","            size = 8, shape = 23, stroke = 3) +"
"0","    "
"0","    # 标签"
"0","    geom_sf_text(data = map_data,"
"0","                aes(label = display_label),"
"0","                size = 3, color = ""black"", fontface = ""bold"") +"
"0","    "
"0","    # 颜色范围"
"0","    scale_fill_gradient2("
"0","      low = ""#2166AC"","
"0","      mid = ""#F7F7F7"","
"0","      high = ""#A50026"","
"0","      midpoint = mean(map_data$dynamic_index, na.rm = TRUE),"
"0","      limits = c("
"0","        floor(min(map_data$dynamic_index, na.rm = TRUE) / 10) * 10,"
"0","        ceiling(max(map_data$dynamic_index, na.rm = TRUE) / 10) * 10"
"0","      ),"
"0","      breaks = pretty(range(map_data$dynamic_index, na.rm = TRUE), n = 5),"
"0","      name = ""Dynamic\nGentrification\nIndex"","
"0","      guide = guide_colorbar("
"0","        barwidth = 2.5,"
"0","        barheight = 20,"
"0","        title.position = ""top"","
"0","        title.hjust = 0.5"
"0","      )"
"0","    ) +"
"0","    "
"0","    # 指北针和比例尺"
"0","    annotation_north_arrow("
"0","      location = ""tr"","
"0","      pad_x = unit(0.3, ""cm""),"
"0","      pad_y = unit(0.3, ""cm"")"
"0","    ) +"
"0","    "
"0","    annotation_scale("
"0","      location = ""bl"","
"0","      width_hint = 0.25"
"0","    ) +"
"0","    "
"0","    labs("
"0","      title = paste0(project_name, "": Dynamic Gentrification Index""),"
"0","      subtitle = paste0("
"0","        ""Method: "", unique(gentrification_data$method),"
"0","        "" | Baseline: "", unique(gentrification_data$baseline_year),"
"0","        "" → Analysis: "", unique(gentrification_data$analysis_year),"
"0","        "" | Mean: "", round(mean(gentrification_data$dynamic_index, na.rm = TRUE), 1),"
"0","        "" | Range: "", round(min(gentrification_data$dynamic_index, na.rm = TRUE), 1),"
"0","        ""-"", round(max(gentrification_data$dynamic_index, na.rm = TRUE), 1)"
"0","      ),"
"0","      caption = ""Index uses adaptive method based on sample size"""
"0","    ) +"
"0","    "
"0","    theme_void() +"
"0","    theme("
"0","      plot.title = element_text(size = 18, face = ""bold"", hjust = 0.5),"
"0","      plot.subtitle = element_text(size = 14, hjust = 0.5, color = ""#555""),"
"0","      plot.caption = element_text(size = 10, hjust = 0.5, color = ""#333""),"
"0","      legend.position = ""right"""
"0","    )"
"0","  "
"0","  return(list(map = p_map, data = map_data))"
"0","}"
"0",""
"0","# ============================================="
"0","# 主执行函数"
"0","# ============================================="
"0","run_gentrification_analysis <- function(panel_data, treatment_year, project_name,"
"0","                                       station_location = NULL) {"
"0","  "
"0","  cat(paste0(""\n========== "", project_name, "" 绅士化分析 ==========\n""))"
"0","  "
"0","  # 计算指数"
"0","  results <- calculate_dynamic_gentrification_index(panel_data, treatment_year, project_name)"
"0","  "
"0","  if(is.null(results)) {"
"0","    cat(""分析失败\n"")"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  # 创建地图"
"0","  map_results <- create_gentrification_map(panel_data, results, project_name, station_location)"
"0","  "
"0","  if(is.null(map_results)) {"
"0","    cat(""地图创建失败\n"")"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  # 保存文件"
"0","  ggsave("
"0","    paste0(""gentrification_result/"", project_name, ""_Gentrification_Natural.png""),"
"0","    map_results$map, width = 16, height = 12, dpi = 300, bg = ""white"""
"0","  )"
"0","  "
"0","  write.csv("
"0","    results,"
"0","    paste0(""gentrification_result/"", project_name, ""_Gentrification_data_natural.csv""),"
"0","    row.names = FALSE"
"0","  )"
"0","  "
"0","  cat(""✅ 分析完成！文件已保存\n"")"
"0","  "
"0","  return(list(data = results, map = map_results))"
"0","}"
"0",""
"0","# ============================================="
"0","# 执行分析"
"0","# ============================================="
"0","cat(""\n🚀 开始自然绅士化分析...\n"")"
"1","
🚀 开始自然绅士化分析...
"
"0","# NLE项目"
"0","if(exists(""nle_affected_metrics"")) {"
"0","  nle_results <- run_gentrification_analysis("
"0","    nle_affected_metrics, 2015, ""NLE"","
"0","    if(exists(""nine_elms_station"")) nine_elms_station else NULL"
"0","  )"
"0","}"
"1","
========== NLE 绅士化分析 ==========
"
"1","
=== 动态绅士化指数 - NLE ===
"
"1","公式: 动态指数 = 基于数据自然分布的加权合成
"
"1","指数范围: 根据实际数据分布确定，无人为约束
"
"1","
=== 数据诊断 ===
"
"1","数据年份范围:"
"1"," "
"1","2011"
"1"," "
"1","到"
"1"," "
"1","2022"
"1"," "
"1","
"
"1","基线年份:"
"1"," "
"1","2014"
"1"," "
"1","
"
"1","分析年份:"
"1"," "
"1","2022"
"1"," "
"1","
"
"1","总数据行数:"
"1"," "
"1","420"
"1"," "
"1","
"
"1","唯一LSOA数量:"
"1"," "
"1","35"
"1"," "
"1","
"
"1","基线年LSOA数量:"
"1"," "
"1","35"
"1"," "
"1","
"
"1","最新年LSOA数量:"
"1"," "
"1","35"
"1"," "
"1","
"
"1","两年都有数据的LSOA:"
"1"," "
"1","35"
"1"," "
"1","
"
"1","
=== 犯罪率数据检查 ===
"
